//------------------------------------------------------------------------------------------------------------------
inline ColorYcc::operator float* ()
{
    return m_afTuple;
}
//------------------------------------------------------------------------------------------------------------------
inline ColorYcc::operator const float* () const
{
    return m_afTuple;
}
//------------------------------------------------------------------------------------------------------------------
inline float& ColorYcc::operator[] (int i)
{
    assert( 0 <= i && i <= 2 );
    return m_afTuple[i];
}
//------------------------------------------------------------------------------------------------------------------
inline float ColorYcc::operator[] (int i) const
{
    assert( 0 <= i && i <= 2 );
    return m_afTuple[i];
}
//------------------------------------------------------------------------------------------------------------------
inline float ColorYcc::Y () const
{
    return m_afTuple[0];
}
//------------------------------------------------------------------------------------------------------------------
inline float& ColorYcc::Y ()
{
    return m_afTuple[0];
}
//------------------------------------------------------------------------------------------------------------------
inline float ColorYcc::Cb () const
{
    return m_afTuple[1];
}
//------------------------------------------------------------------------------------------------------------------
inline float& ColorYcc::Cb ()
{
    return m_afTuple[1];
}
//------------------------------------------------------------------------------------------------------------------
inline float ColorYcc::Cr () const
{
    return m_afTuple[2];
}
//------------------------------------------------------------------------------------------------------------------
inline float& ColorYcc::Cr ()
{
    return m_afTuple[2];
}
//------------------------------------------------------------------------------------------------------------------



