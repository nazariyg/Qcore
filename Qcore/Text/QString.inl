//------------------------------------------------------------------------------------------------------------------
inline int String::GetLength () const
{
    return m_iLength;
}
//------------------------------------------------------------------------------------------------------------------
inline int String::GetMemLength () const
{
    return m_iLength + 1;
}
//------------------------------------------------------------------------------------------------------------------
inline bool String::IsEmpty () const
{
    return ( m_iLength == 0 );
}
//------------------------------------------------------------------------------------------------------------------
inline char* String::GetChars ()
{
    return m_acText;
}
//------------------------------------------------------------------------------------------------------------------
inline const char* String::GetChars () const
{
    return m_acText;
}
//------------------------------------------------------------------------------------------------------------------
inline String::operator char* ()
{
    return m_acText;
}
//------------------------------------------------------------------------------------------------------------------
inline String::operator const char* () const
{
    return m_acText;
}
//------------------------------------------------------------------------------------------------------------------
inline char String::operator [] (int i) const
{
    assert( 0 <= i && i < m_iLength );
    return m_acText[i];
}
//------------------------------------------------------------------------------------------------------------------
inline char& String::operator [] (int i)
{
    assert( 0 <= i && i < m_iLength );
    return m_acText[i];
}
//------------------------------------------------------------------------------------------------------------------
inline char String::Chr (int iCode)
{
    assert( 0 <= iCode && iCode <= 255 );
    return (char)iCode;
}
//------------------------------------------------------------------------------------------------------------------



